version: 2.1

jobs:
  build-frontend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-modules]
      - run:
          name: Build front-end
          command: |
            cd frontend
            npm i
            npm run build
      - save_cache:
          paths: [frontend/node_modules]
          key: frontend-modules

  build-backend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-modules]
      - run:
          name: Back-end build
          command: |
            cd backend
            npm i
            npm run build
      - save_cache:
          paths: [backend/node_modules]
          key: backend-modules

  test-frontend:
    docker:
      - image: cimg/node:13.8.0
    parallelism: 3
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-modules]
      - run:
          name: Front-end test
          command: |
            cd frontend
            TEST_FILES=$(circleci tests glob "frontend/**/*.spec.tsx" | circleci tests split --split-by=timings)
            npm test $TEST_FILES

  test-backend:
    docker:
      - image: cimg/node:13.8.0
    parallelism: 3
    steps:
      - checkout
      - restore_cache:
          keys: [backend-modules]
      - run:
          name: Back-end test
          command: |
            cd backend
            TEST_FILES=$(circleci tests glob "backend/**/*.spec.ts" | circleci tests split --split-by=timings)
            npm test $TEST_FILES

  scan-frontend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [frontend-modules]
      - run:
          name: Front-end scan
          command: |
            cd frontend
            npm audit fix --audit-level=critical --force
            npm audit fix --force
            npm audit --audit-level=critical

  scan-backend:
    docker:
      - image: cimg/node:13.8.0
    steps:
      - checkout
      - restore_cache:
          keys: [backend-modules]
      - run:
          name: Back-end scan
          command: |
            cd backend
            npm audit fix --audit-level=critical --force
            npm audit fix --force
            npm audit --audit-level=critical



  create-infrastructure:
    docker:
      - image: amazon/aws-cli:latest
    steps:
      - checkout
      - run:
          name: Create backend infrastructure
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/backend.yml \
              --stack-name backend-${CIRCLE_WORKFLOW_ID:0:7} \
              --capabilities CAPABILITY_IAM
      - run:
          name: Create frontend infrastructure
          command: |
            aws cloudformation deploy \
              --template-file .circleci/files/frontend.yml \
              --stack-name frontend-${CIRCLE_WORKFLOW_ID:0:7} \
              --capabilities CAPABILITY_IAM

workflows:
  default:
    jobs:
      - build-frontend
      - build-backend
      - test-frontend:
          requires:
            - build-frontend
      - test-backend:
          requires:
            - build-backend
      - scan-backend:
          requires: [build-backend]
      - scan-frontend:
          requires: [build-frontend]